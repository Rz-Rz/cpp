break insertPairs(Stack<std::vector<BasePair*, std::allocator<BasePair*> > >&) 
r
layout src
step
step
step
step
step
b insertPairs(Stack<std::vector<BasePair*, std::allocator<BasePair*> > >&) 
layout src
r
display J_upper
d J_lower
display J_lower
dplay tmp
python
from pygments.styles import *
for style in get_all_styles():
    command = 'dashboard -style syntax_highlighting {!r}'.format(style)
    gdb.execute(command)
    print(command)
    if input('Use this style? (y/N) ') == 'y':
        break
end
python
from pygments.styles import *
for style in get_all_styles():
    print(style)
end
python
from pygments.styles import *
for style in get_all_styles():
    command = 'dashboard -style syntax_highlighting {!r}'.format(style)
    gdb.execute(command)
    print(command)
    if input('Use this style? (y/N) ') == 'y':
        break
end
python
from pygments.styles import *
for style in get_all_styles():
    print(style)
end
dashboard -style dracula
dashboard -style syntax-highlighting
dashboard -style syntax_highlighting dracula
dashboard -style syntax_highlighting lilypond
python
from pygments.styles import *
for style in get_all_styles():
    command = 'dashboard -style syntax_highlighting {!r}'.format(style)
    gdb.execute(command)
    print(command)
    if input('Use this style? (y/N) ') == 'y':
        break
end
q
break insertPairs(Stack<std::vector<BasePair*, std::allocator<BasePair*> > >&) 
r
layout src
display J_upper J_lower
display J_upper 
display J_lower 
display tmp
s
s
s
s
s
n
n
n
print last
print stack
define print_stack_content
  set $i = 0
  while $i < stack.size()
    set $j = 0
    while $j < stack[$i].size()
      print *stack[$i][$j]
      set $j = $j + 1
    end
    set $i = $i + 1
  end
end
document print_stack_content
Prints the content of all pointers in the stack vector.
end
print_stack_content stack
set $i = 0
while $i < 6
  print *stack[0][$i]
  set $i = $i + 1
end
set $i = 0
while $i < 6
  print *stack[0][$i]
  set $i = $i + 1
end
p stack
p *stack[0]
p stack[0]
n
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
n
n
n
n
n
p pairVector
p pairVector[0]
p *pairVector[0]
p pairVecto[0]->a()
p pairVector[0]->a()
q

n
n
n
n
n
set unwindonsignal on
b insertPairs(Stack<std::vector<BasePair*, std::allocator<BasePair*> > >&) 
r
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
display pairVector[0]->a()
display pairVector[0]->b()
n
n
n
n
n
n
n
print mainChain
print mainChain[0]
print *mainChain
print mainChain
print *v._M_impl._M_start@v._M_impl._M_finish-v._M_impl._M_start
print *mainChain._M_impl._M_start@mainChain._M_impl._M_finish-mainChain._M_impl._M_start
info pretty-printer
enable pretty-printer builtin
print mainChain 
quit
b insertPairs(Stack<std::vector<BasePair*, std::allocator<BasePair*> > >&) 
r
n
n
n
n
n
n
nn
n
n
p pairVector
p mainChain
n
n
n
n
n
n
n
n
n
n
n
n
p mainChain
p pairVector
p pairVector[0]
p *pairVector[0]
p pairVector[0]->a()
n
n
rs
reverse-step
revers
reverse-step
quit
b insertPairs(Stack<std::vector<BasePair*, std::allocator<BasePair*> > >&) 
ls
r
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
display pairVector[i]->a()
n
n
target record-full
n
r
n
reverse-step
target record-full
n
n
Process record does not support instruction 0xc5 at address 0x7ffff7d4d7b9.
Process record: failed to record execution log.

Program stopped.n
n
r
n
quit
b insertPairs(Stack<std::vector<BasePair*, std::allocator<BasePair*> > >&) 
r
n
quit
b testParametarizedConstructor(std::vector<int, std::allocator<int> >&) 
r
n
n
n
quit
target record-full
b testParametarizedConstructor(std::vector<int, std::allocator<int> >&) 
r
target record-full
s
b IterativePair<int, std::vector>::
b IterativePair<int, std::vector>::IterativePair(std::vector<int, std::allocator<int> >) 
s
s
s
clear
quit
sort
b sort() 
r
s
s
s
p _p1
p _p2
s
p _p1
p _p2
s
s
p _p1
n
s
s
s
s
s
ss
step
step
quit
b IterativePair<int, std::vector>::IterativePair(std::vector<int, std::allocator<int> >) 
b sort
r
target record-full
s
n
n
n
quit
b IterativePair::IterativePair(std::vector<int, std::allocator<int> >) 
b sort
r
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
c
n
n
n
n
n
n
n
n
c
n
n
p _p!
p _p1
s
s
s
s
p _p!
p _p1
quit
b sort
b print
r
n
s
n
p _container.size() 
n
n
n
n
n
n
n
n
p _p1->container.begin()
p _p1->_container.begin()
p _p1->_container.begin()
p *_p1->_container.begin()
quit
